{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[],"devdoc":{"details":"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.0.0, only sets of type `address` (`AddressSet`) and `uint256` (`UintSet`) are supported.","kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"vault/vendor/v0.6/EnumerableSet.sol":"EnumerableSet"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"vault/vendor/v0.6/EnumerableSet.sol":{"keccak256":"0x1492927e67a948a4ead8381ced75abddfcb81aad176b2b29ed96cb368defad7d","license":"MIT","urls":["bzz-raw://1070ea12ad42542d581e7f64ca69109583b4df0f55e2905431797a64f35a0130","dweb:/ipfs/QmV2accXPmm487CHBcCT3ioyB51CnBm6jMS6dAHegQcVgQ"]}},"version":1}