{"compiler":{"version":"0.6.12+commit.27d51765"},"language":"Solidity","output":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"coin","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"DonateDeposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"h","type":"string"},{"indexed":false,"internalType":"uint256","name":"dot","type":"uint256"}],"name":"GameVault","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"coin","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"UpdatedBank","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"coin","type":"address"},{"indexed":false,"internalType":"address","name":"beneficier","type":"address"}],"name":"UpdatedWallet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"coin","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"UsrDeposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"coin","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"UsrWithdraw","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"coin","type":"address"},{"indexed":false,"internalType":"address","name":"beneficier","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"WithdrawalGov","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"value","type":"bool"}],"name":"contractPaused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"value","type":"uint8"}],"name":"traillock","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"addGovernor","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"addWhitelistAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"bank_vault","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"coin","type":"address"},{"internalType":"address","name":"user","type":"address"}],"name":"check","outputs":[{"internalType":"uint256[6]","name":"chr","type":"uint256[6]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"game_round","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"governor","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"isGovernor","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isLocked","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isPaused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"isWhitelistAdmin","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lock","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pauseSc","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"pool_fee","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"pool_fee_discount","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"pool_vault","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"removeGovernor","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"removeWhitelistAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"round_vault","outputs":[{"internalType":"uint256","name":"dot","type":"uint256"},{"internalType":"uint16","name":"users","type":"uint16"},{"internalType":"string","name":"hash","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint16","name":"perc","type":"uint16"}],"name":"set_discount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"x","type":"address"},{"internalType":"uint16","name":"percent_1000","type":"uint16"}],"name":"set_fee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"n_round","type":"uint256"}],"name":"set_round","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"coin","type":"address"}],"name":"signature","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unlock","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpauseSc","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"whitelistAdmins","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"getRoleAdmin(bytes32)":{"details":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"getRoleMember(bytes32,uint256)":{"details":"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."},"getRoleMemberCount(bytes32)":{"details":"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."},"grantRole(bytes32,address)":{"details":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{"details":"Returns `true` if `account` has been granted `role`."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"renounceRole(bytes32,address)":{"details":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."},"revokeRole(bytes32,address)":{"details":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"vault/enrock/Enrockvault.sol":"BaseVault"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"vault/enrock/Enrockvault.sol":{"keccak256":"0xefafd2409f34e031e1fcc698a6499f232b09aacf96bf711ceacdda4f7262d6b7","urls":["bzz-raw://0e2f66f4332f4993558674a1f1ad13acc7e65e6d07378e87072bbfe6131d85d2","dweb:/ipfs/QmU2VyR6i4VAFwBj87CEHBK96gnE8FqME2jmP1TqoPVYmF"]},"vault/enrock/IVaultConfigProvider.sol":{"keccak256":"0x6001f106b37f8e85c7bd180fa09797fff34c4b3ee05a56abbb2278c480506253","urls":["bzz-raw://b1904925c582b44b7e932e2832cb5d7aef87a84b64e714784f7b67210b6c4f92","dweb:/ipfs/QmVojz92xaPKzuDUW66bvQTuXSnacoUs3AxS3EBQSPUnm5"]},"vault/vendor/v0.6/AccessControl.sol":{"keccak256":"0x8d4f25c969a29ed3879348ca61f919d61b25ad3e10440189ab60529dbee25c57","license":"MIT","urls":["bzz-raw://2bda9d25830715592bf0a5832941bcb89c6e800cf07a565272109bfd2f083ee3","dweb:/ipfs/QmS1F2ehWHdUscSXf15Ydbewwvf3nUMPAmv2PiNDSDGVRh"]},"vault/vendor/v0.6/Address.sol":{"keccak256":"0x8324cfffee1e50ff439a343c57d91531288dc4f372972f2596e4e5580e0d1555","license":"agpl-3.0","urls":["bzz-raw://0fdfbdac1836fd2e7efa5dbb0798b01e7c4e9e6a5db0c7df1b4e3ccb0208aa7d","dweb:/ipfs/QmVYrxGojviiVk9AoHWe2Vc9Qt5hCDjFFxi6dRuRCoZMKr"]},"vault/vendor/v0.6/Context.sol":{"keccak256":"0x74d9ce9690018dc1a2e1f9c832c9cec0ba851de393a55e2f25c83322742b4fb9","license":"agpl-3.0","urls":["bzz-raw://bbfd35482a3414dfdfc62f927711a2de97838cfade2419c47e6efeee8598ed64","dweb:/ipfs/QmZTUKLVrtV1Tymd3qvXj2zsSVsKejwtXnHAPWAmx6irAG"]},"vault/vendor/v0.6/EnumerableSet.sol":{"keccak256":"0x1492927e67a948a4ead8381ced75abddfcb81aad176b2b29ed96cb368defad7d","license":"MIT","urls":["bzz-raw://1070ea12ad42542d581e7f64ca69109583b4df0f55e2905431797a64f35a0130","dweb:/ipfs/QmV2accXPmm487CHBcCT3ioyB51CnBm6jMS6dAHegQcVgQ"]},"vault/vendor/v0.6/IERC20.sol":{"keccak256":"0x158a3cf9a9ee86632947b908f36605b686b7e36e8e9cef52eca75cf76556a376","license":"agpl-3.0","urls":["bzz-raw://e2bcba275cffae0c1ed88cdf6bce1dc7b3cbd6f378ac36cf5b4db404b78d5b49","dweb:/ipfs/QmQrPHi8GYcYB2jPy6D87HPS532yHt21a7TysEWAC8AcX1"]},"vault/vendor/v0.6/Ownable.sol":{"keccak256":"0xbfcfaaa0f6a6299b7371b50aad65768a66cd397a6c998a639c7394afc44405a1","license":"MIT","urls":["bzz-raw://befb725565cb402064292fa546356aaacd15fcb1ff598f3aef11cd00b0dd9967","dweb:/ipfs/Qmb6y7VmrgPctp4nDC5YzqzzBoBkM1AgPReqAGLN3Ay3A8"]},"vault/vendor/v0.6/ReentrancyGuard.sol":{"keccak256":"0x22baff54a91ad5055f6667ccc45adf75051fcd1c6c3faa2dd699d22f73dd99a6","license":"MIT","urls":["bzz-raw://7e807eac8abcb37de7e9b2063153eef25f525687588c36986c7ea49b64c01f5f","dweb:/ipfs/QmanVzjwQHRcQyCjvAcSUuBuNcEr6uEbKKkQCKsQfpjzGx"]},"vault/vendor/v0.6/RoleIsland.sol":{"keccak256":"0xe4a0f5a1faf7162defeacf6284794e19b4ccb4c91bdaf0e3d1f9ef2232334466","license":"MIT","urls":["bzz-raw://2fea2e97c2c81063cc7abb647ccc6eff7a6c6d5681996db1c1e36f722f38b865","dweb:/ipfs/QmPhw179FZ5pwvfYLLFzwVkQCTTF8pUiJaw6XKVZDFaa7o"]},"vault/vendor/v0.6/SafeERC20.sol":{"keccak256":"0xb65dca3736bf8d74d9f3cd705bfb7b7986213eb3f0b19e456550dfebbc407499","license":"MIT","urls":["bzz-raw://0b12cfc9b521746b4c690df60d4530593afdac04699e40b30c99b5b5df424854","dweb:/ipfs/QmaA7GNg79hXzWsXVKSp13kdg38kEP8BurEwmACypTcNj1"]},"vault/vendor/v0.6/SafeMath.sol":{"keccak256":"0x5afc2a8efa7d5144a7b489c142311715d186fb580e001f7a8a1605201a7f8737","license":"agpl-3.0","urls":["bzz-raw://5c70b0f9390ea1b03d950e9cdd10f42e097a394cd171ae415b567a176a021141","dweb:/ipfs/QmaM38k2Xd6iUaY2Rtp6szsBdRbRZGCfJfb2DMnnsik7tx"]}},"version":1}